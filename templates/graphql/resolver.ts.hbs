import { Args, Mutation, Query, Resolver, Int } from "@nestjs/graphql";

import { {{ inflections.entityUpper }}Service } from "../services";
import {
  {{ inflections.entityUpper }},
  {{ inflections.entityUpper }}CreateInput,
  {{ inflections.entityUpper }}UpdateInput
} from "../models";

@Resolver("{{ inflections.entityUpper }}")
  export class {{ inflections.entityUpper }}Resolver {
  constructor(private readonly {{ inflections.entityLower }}Service: {{ inflections.entityUpper }}Service) {}

  @Mutation(() => {{ inflections.entityUpper }})
    create{{ inflections.entityUpper }}(@Args("createInput") createInput: {{ inflections.entityUpper }}CreateInput) {
    return this.{{ inflections.entityLower }}Service.create(createInput);
  }

  @Query(() => {{ inflections.entityUpper }})
    readOne{{ inflections.entityUpper }}(id: number) {
    return this.{{ inflections.entityLower }}Service.readOne(id);
  }

  @Query(() => [{{ inflections.entityUpper }}])
    readAll{{ inflections.entityUpperPlural }}() {
    return this.{{ inflections.entityLower }}Service.readAll();
  }

  @Mutation(() => {{ inflections.entityUpper }})
    update{{ inflections.entityUpper }}(@Args("updateInput") updateInput: {{ inflections.entityUpper }}UpdateInput) {
    return this.{{ inflections.entityLower }}Service.update(updateInput);
  }

  @Mutation(() => Int)
    delete{{ inflections.entityUpper }}(@Args({ name: "id", type: () => Int }) id: number) {
    return this.{{ inflections.entityLower }}Service.delete(id);
  }
}
